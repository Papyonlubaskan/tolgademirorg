// This file is generated automatically by Next.js
// Do not edit this file manually
// This file validates that all pages and layouts export the correct types

import type { AppRoutes, LayoutRoutes, ParamMap, AppRouteHandlerRoutes } from "./routes.js"
import type { ResolvingMetadata, ResolvingViewport } from "next/types.js"
import type { NextRequest } from 'next/server.js'

type AppPageConfig<Route extends AppRoutes = AppRoutes> = {
  default: React.ComponentType<{ params: Promise<ParamMap[Route]> } & any> | ((props: { params: Promise<ParamMap[Route]> } & any) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type LayoutConfig<Route extends LayoutRoutes = LayoutRoutes> = {
  default: React.ComponentType<LayoutProps<Route>> | ((props: LayoutProps<Route>) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type RouteHandlerConfig<Route extends AppRouteHandlerRoutes = AppRouteHandlerRoutes> = {
  GET?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  POST?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  PUT?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  PATCH?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  DELETE?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  HEAD?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  OPTIONS?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
}


// Validate ../../app/about/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/about">> = Specific
  const handler = {} as typeof import("../../app/about/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/blog/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/blog">> = Specific
  const handler = {} as typeof import("../../app/blog/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/books/[id]/chapter/[chapterId]/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/books/[id]/chapter/[chapterId]">> = Specific
  const handler = {} as typeof import("../../app/books/[id]/chapter/[chapterId]/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/books/[id]/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/books/[id]">> = Specific
  const handler = {} as typeof import("../../app/books/[id]/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/books/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/books">> = Specific
  const handler = {} as typeof import("../../app/books/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/contact/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/contact">> = Specific
  const handler = {} as typeof import("../../app/contact/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/gizlilik-politikasi/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/gizlilik-politikasi">> = Specific
  const handler = {} as typeof import("../../app/gizlilik-politikasi/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/hakkimda/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/hakkimda">> = Specific
  const handler = {} as typeof import("../../app/hakkimda/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/iletisim/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/iletisim">> = Specific
  const handler = {} as typeof import("../../app/iletisim/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/kitaplar/[id]/bolum/[bolumId]/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/kitaplar/[id]/bolum/[bolumId]">> = Specific
  const handler = {} as typeof import("../../app/kitaplar/[id]/bolum/[bolumId]/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/kitaplar/[id]/chapter/[chapterId]/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/kitaplar/[id]/chapter/[chapterId]">> = Specific
  const handler = {} as typeof import("../../app/kitaplar/[id]/chapter/[chapterId]/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/kitaplar/[id]/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/kitaplar/[id]">> = Specific
  const handler = {} as typeof import("../../app/kitaplar/[id]/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/kitaplar/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/kitaplar">> = Specific
  const handler = {} as typeof import("../../app/kitaplar/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/kullanim-kosullari/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/kullanim-kosullari">> = Specific
  const handler = {} as typeof import("../../app/kullanim-kosullari/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/kvkk/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/kvkk">> = Specific
  const handler = {} as typeof import("../../app/kvkk/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/maintenance/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/maintenance">> = Specific
  const handler = {} as typeof import("../../app/maintenance/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/">> = Specific
  const handler = {} as typeof import("../../app/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/privacy-policy/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/privacy-policy">> = Specific
  const handler = {} as typeof import("../../app/privacy-policy/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/terms/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/terms">> = Specific
  const handler = {} as typeof import("../../app/terms/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/yonetim/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/yonetim">> = Specific
  const handler = {} as typeof import("../../app/yonetim/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/admin/2fa/disable/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/admin/2fa/disable">> = Specific
  const handler = {} as typeof import("../../app/api/admin/2fa/disable/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/admin/2fa/generate/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/admin/2fa/generate">> = Specific
  const handler = {} as typeof import("../../app/api/admin/2fa/generate/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/admin/2fa/verify/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/admin/2fa/verify">> = Specific
  const handler = {} as typeof import("../../app/api/admin/2fa/verify/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/admin/active-users/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/admin/active-users">> = Specific
  const handler = {} as typeof import("../../app/api/admin/active-users/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/admin/alerts/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/admin/alerts">> = Specific
  const handler = {} as typeof import("../../app/api/admin/alerts/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/admin/backup/create/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/admin/backup/create">> = Specific
  const handler = {} as typeof import("../../app/api/admin/backup/create/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/admin/backup/delete/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/admin/backup/delete">> = Specific
  const handler = {} as typeof import("../../app/api/admin/backup/delete/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/admin/backup/list/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/admin/backup/list">> = Specific
  const handler = {} as typeof import("../../app/api/admin/backup/list/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/admin/backup/restore/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/admin/backup/restore">> = Specific
  const handler = {} as typeof import("../../app/api/admin/backup/restore/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/admin/ban-ip/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/admin/ban-ip">> = Specific
  const handler = {} as typeof import("../../app/api/admin/ban-ip/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/admin/cache/clear/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/admin/cache/clear">> = Specific
  const handler = {} as typeof import("../../app/api/admin/cache/clear/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/admin/concurrent-lock/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/admin/concurrent-lock">> = Specific
  const handler = {} as typeof import("../../app/api/admin/concurrent-lock/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/admin/me/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/admin/me">> = Specific
  const handler = {} as typeof import("../../app/api/admin/me/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/admin/media/delete/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/admin/media/delete">> = Specific
  const handler = {} as typeof import("../../app/api/admin/media/delete/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/admin/media/list/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/admin/media/list">> = Specific
  const handler = {} as typeof import("../../app/api/admin/media/list/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/admin/notifications/create/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/admin/notifications/create">> = Specific
  const handler = {} as typeof import("../../app/api/admin/notifications/create/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/admin/notifications/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/admin/notifications">> = Specific
  const handler = {} as typeof import("../../app/api/admin/notifications/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/admin/pages/[id]/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/admin/pages/[id]">> = Specific
  const handler = {} as typeof import("../../app/api/admin/pages/[id]/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/admin/pages/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/admin/pages">> = Specific
  const handler = {} as typeof import("../../app/api/admin/pages/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/admin/performance/test/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/admin/performance/test">> = Specific
  const handler = {} as typeof import("../../app/api/admin/performance/test/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/admin/responsive/test/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/admin/responsive/test">> = Specific
  const handler = {} as typeof import("../../app/api/admin/responsive/test/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/admin/security/settings/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/admin/security/settings">> = Specific
  const handler = {} as typeof import("../../app/api/admin/security/settings/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/admin/security/users/change-password/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/admin/security/users/change-password">> = Specific
  const handler = {} as typeof import("../../app/api/admin/security/users/change-password/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/admin/security/users/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/admin/security/users">> = Specific
  const handler = {} as typeof import("../../app/api/admin/security/users/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/admin/seo/optimize/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/admin/seo/optimize">> = Specific
  const handler = {} as typeof import("../../app/api/admin/seo/optimize/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/admin/stats/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/admin/stats">> = Specific
  const handler = {} as typeof import("../../app/api/admin/stats/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/analytics/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/analytics">> = Specific
  const handler = {} as typeof import("../../app/api/analytics/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/analytics/stats/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/analytics/stats">> = Specific
  const handler = {} as typeof import("../../app/api/analytics/stats/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/auth/2fa/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/auth/2fa">> = Specific
  const handler = {} as typeof import("../../app/api/auth/2fa/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/auth/2fa/setup/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/auth/2fa/setup">> = Specific
  const handler = {} as typeof import("../../app/api/auth/2fa/setup/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/auth/2fa/verify/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/auth/2fa/verify">> = Specific
  const handler = {} as typeof import("../../app/api/auth/2fa/verify/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/auth/login/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/auth/login">> = Specific
  const handler = {} as typeof import("../../app/api/auth/login/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/auth/logout/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/auth/logout">> = Specific
  const handler = {} as typeof import("../../app/api/auth/logout/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/auth/me/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/auth/me">> = Specific
  const handler = {} as typeof import("../../app/api/auth/me/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/books/[id]/chapters/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/books/[id]/chapters">> = Specific
  const handler = {} as typeof import("../../app/api/books/[id]/chapters/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/books/[id]/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/books/[id]">> = Specific
  const handler = {} as typeof import("../../app/api/books/[id]/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/books/[id]/views/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/books/[id]/views">> = Specific
  const handler = {} as typeof import("../../app/api/books/[id]/views/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/books/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/books">> = Specific
  const handler = {} as typeof import("../../app/api/books/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/books/search/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/books/search">> = Specific
  const handler = {} as typeof import("../../app/api/books/search/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/chapters/[id]/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/chapters/[id]">> = Specific
  const handler = {} as typeof import("../../app/api/chapters/[id]/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/chapters/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/chapters">> = Specific
  const handler = {} as typeof import("../../app/api/chapters/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/comments/[id]/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/comments/[id]">> = Specific
  const handler = {} as typeof import("../../app/api/comments/[id]/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/comments/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/comments">> = Specific
  const handler = {} as typeof import("../../app/api/comments/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/contact/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/contact">> = Specific
  const handler = {} as typeof import("../../app/api/contact/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/csrf/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/csrf">> = Specific
  const handler = {} as typeof import("../../app/api/csrf/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/health/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/health">> = Specific
  const handler = {} as typeof import("../../app/api/health/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/likes/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/likes">> = Specific
  const handler = {} as typeof import("../../app/api/likes/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/messages/[id]/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/messages/[id]">> = Specific
  const handler = {} as typeof import("../../app/api/messages/[id]/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/messages/send-reply/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/messages/send-reply">> = Specific
  const handler = {} as typeof import("../../app/api/messages/send-reply/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/newsletter/notify/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/newsletter/notify">> = Specific
  const handler = {} as typeof import("../../app/api/newsletter/notify/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/newsletter/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/newsletter">> = Specific
  const handler = {} as typeof import("../../app/api/newsletter/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/newsletter/unsubscribe/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/newsletter/unsubscribe">> = Specific
  const handler = {} as typeof import("../../app/api/newsletter/unsubscribe/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/reading-history/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/reading-history">> = Specific
  const handler = {} as typeof import("../../app/api/reading-history/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/settings/maintenance/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/settings/maintenance">> = Specific
  const handler = {} as typeof import("../../app/api/settings/maintenance/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/settings/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/settings">> = Specific
  const handler = {} as typeof import("../../app/api/settings/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/upload/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/upload">> = Specific
  const handler = {} as typeof import("../../app/api/upload/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/uploads/images/[...filename]/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/uploads/images/[...filename]">> = Specific
  const handler = {} as typeof import("../../app/uploads/images/[...filename]/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}





// Validate ../../app/kitaplar/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/kitaplar">> = Specific
  const handler = {} as typeof import("../../app/kitaplar/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/">> = Specific
  const handler = {} as typeof import("../../app/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}
