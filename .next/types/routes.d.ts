// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = "/" | "/about" | "/blog" | "/books" | "/books/[id]" | "/books/[id]/chapter/[chapterId]" | "/contact" | "/gizlilik-politikasi" | "/hakkimda" | "/iletisim" | "/kitaplar" | "/kitaplar/[id]" | "/kitaplar/[id]/bolum/[bolumId]" | "/kitaplar/[id]/chapter/[chapterId]" | "/kullanim-kosullari" | "/kvkk" | "/maintenance" | "/privacy-policy" | "/terms" | "/yonetim"
type AppRouteHandlerRoutes = "/api/admin/2fa/disable" | "/api/admin/2fa/generate" | "/api/admin/2fa/verify" | "/api/admin/active-users" | "/api/admin/alerts" | "/api/admin/backup/create" | "/api/admin/backup/delete" | "/api/admin/backup/list" | "/api/admin/backup/restore" | "/api/admin/ban-ip" | "/api/admin/cache/clear" | "/api/admin/concurrent-lock" | "/api/admin/me" | "/api/admin/media/delete" | "/api/admin/media/list" | "/api/admin/notifications" | "/api/admin/notifications/create" | "/api/admin/pages" | "/api/admin/pages/[id]" | "/api/admin/performance/test" | "/api/admin/responsive/test" | "/api/admin/security/settings" | "/api/admin/security/users" | "/api/admin/security/users/change-password" | "/api/admin/seo/optimize" | "/api/admin/stats" | "/api/analytics" | "/api/analytics/stats" | "/api/auth/2fa" | "/api/auth/2fa/setup" | "/api/auth/2fa/verify" | "/api/auth/login" | "/api/auth/logout" | "/api/auth/me" | "/api/books" | "/api/books/[id]" | "/api/books/[id]/chapters" | "/api/books/[id]/views" | "/api/books/search" | "/api/chapters" | "/api/chapters/[id]" | "/api/comments" | "/api/comments/[id]" | "/api/contact" | "/api/csrf" | "/api/health" | "/api/likes" | "/api/messages/[id]" | "/api/messages/send-reply" | "/api/newsletter" | "/api/newsletter/notify" | "/api/newsletter/unsubscribe" | "/api/reading-history" | "/api/settings" | "/api/settings/maintenance" | "/api/upload" | "/uploads/images/[...filename]"
type PageRoutes = never
type LayoutRoutes = "/" | "/kitaplar"
type RedirectRoutes = never
type RewriteRoutes = never
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes | AppRouteHandlerRoutes


interface ParamMap {
  "/": {}
  "/about": {}
  "/api/admin/2fa/disable": {}
  "/api/admin/2fa/generate": {}
  "/api/admin/2fa/verify": {}
  "/api/admin/active-users": {}
  "/api/admin/alerts": {}
  "/api/admin/backup/create": {}
  "/api/admin/backup/delete": {}
  "/api/admin/backup/list": {}
  "/api/admin/backup/restore": {}
  "/api/admin/ban-ip": {}
  "/api/admin/cache/clear": {}
  "/api/admin/concurrent-lock": {}
  "/api/admin/me": {}
  "/api/admin/media/delete": {}
  "/api/admin/media/list": {}
  "/api/admin/notifications": {}
  "/api/admin/notifications/create": {}
  "/api/admin/pages": {}
  "/api/admin/pages/[id]": { "id": string; }
  "/api/admin/performance/test": {}
  "/api/admin/responsive/test": {}
  "/api/admin/security/settings": {}
  "/api/admin/security/users": {}
  "/api/admin/security/users/change-password": {}
  "/api/admin/seo/optimize": {}
  "/api/admin/stats": {}
  "/api/analytics": {}
  "/api/analytics/stats": {}
  "/api/auth/2fa": {}
  "/api/auth/2fa/setup": {}
  "/api/auth/2fa/verify": {}
  "/api/auth/login": {}
  "/api/auth/logout": {}
  "/api/auth/me": {}
  "/api/books": {}
  "/api/books/[id]": { "id": string; }
  "/api/books/[id]/chapters": { "id": string; }
  "/api/books/[id]/views": { "id": string; }
  "/api/books/search": {}
  "/api/chapters": {}
  "/api/chapters/[id]": { "id": string; }
  "/api/comments": {}
  "/api/comments/[id]": { "id": string; }
  "/api/contact": {}
  "/api/csrf": {}
  "/api/health": {}
  "/api/likes": {}
  "/api/messages/[id]": { "id": string; }
  "/api/messages/send-reply": {}
  "/api/newsletter": {}
  "/api/newsletter/notify": {}
  "/api/newsletter/unsubscribe": {}
  "/api/reading-history": {}
  "/api/settings": {}
  "/api/settings/maintenance": {}
  "/api/upload": {}
  "/blog": {}
  "/books": {}
  "/books/[id]": { "id": string; }
  "/books/[id]/chapter/[chapterId]": { "id": string; "chapterId": string; }
  "/contact": {}
  "/gizlilik-politikasi": {}
  "/hakkimda": {}
  "/iletisim": {}
  "/kitaplar": {}
  "/kitaplar/[id]": { "id": string; }
  "/kitaplar/[id]/bolum/[bolumId]": { "id": string; "bolumId": string; }
  "/kitaplar/[id]/chapter/[chapterId]": { "id": string; "chapterId": string; }
  "/kullanim-kosullari": {}
  "/kvkk": {}
  "/maintenance": {}
  "/privacy-policy": {}
  "/terms": {}
  "/uploads/images/[...filename]": { "filename": string[]; }
  "/yonetim": {}
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
  "/": never
  "/kitaplar": never
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap, AppRouteHandlerRoutes }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }

  /**
   * Context for Next.js App Router route handlers
   * @example
   * ```tsx
   * export async function GET(request: NextRequest, context: RouteContext<'/api/users/[id]'>) {
   *   const { id } = await context.params
   *   return Response.json({ id })
   * }
   * ```
   */
  interface RouteContext<AppRouteHandlerRoute extends AppRouteHandlerRoutes> {
    params: Promise<ParamMap[AppRouteHandlerRoute]>
  }
}
